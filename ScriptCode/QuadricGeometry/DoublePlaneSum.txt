/*
 * Study double-plane sums.
 */
do
(
	/* This can be used to do the over-bar algebraicly, but a function would be fast and more accurate. */
	S04 = ( 1 - e0*e4 ) / sqrt(2),
	S15 = ( 1 - e1*e5 ) / sqrt(2),
	S26 = ( 1 - e2*e6 ) / sqrt(2),
	S37 = ( 1 - e3*e7 ) / sqrt(2),
	S = S04*S15*S26*S37,

	/* These are used for debugging purposes. */
	p = e0 + $x*e1 + $y*e2 + $z*e3,
	pb = e4 + $x*e5 + $y*e6 + $z*e7,

	/* Formulate the double-plane. */
	ca = e1 + e2,
	n1_a = -e1,
	n2_a = -e1,
	u = ((ca . n1_a)*e0 - n1_a),
	v = ((ca . n2_a)*e0 - n2_a),
	dbl_pln_a = u^(S*v*S~),
	bind_quadric( dbl_pln_a ),
	geo_color( dbl_pln_a, 1, 0, 0 ),
	
	/* Formulate the double-plane reflection about the origin. */
	cb = -ca,
	n1_b = -e2,
	n2_b = -e2,
	u = ((cb . n1_a)*e0 - n1_b),
	v = ((cb . n2_a)*e0 - n2_b),
	dbl_pln_b = u^(S*v*S~),
	bind_quadric( dbl_pln_b ),
	geo_color( dbl_pln_b, 0, 0, 1 ),
	
	/* Form the sum. */
	B = 0,
	bind_quadric( B ),
	formula_constraint( "B = grade_part( 2, dbl_pln_a + dbl_pln_b )" ),
	
	/* Make a rotor we can use to rotate one of the double-planes. */
	pi = 3.1415926536,
	angle = pi / 10,
	axis = e1,
	R = cos( angle / 2 ) - axis*(e1^e2^e3)*sin( angle / 2 ),
	/*Rb = S*R*S~,*/
	axisb = e5,
	Rb = cos( angle / 2 ) - axisb*(e5^e6^e7)*sin( angle / 2 ),
	V = R*Rb,
	
	/* Use "dbl_pln_b = grade_part( 2, V*dbl_pln_b*V~ )" to rotate the second double-plane. */
)